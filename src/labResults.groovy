import groovyx.gpars.GParsPool

import java.util.concurrent.atomic.AtomicInteger
import groovy.transform.BaseScript

@BaseScript CcdAnalysis script

@Grab("org.codehaus.gpars:gpars:1.2.1")
/**
 * This script prints the frequency of each Lab Result in the CCDs
 * Created by penny.lischer on 10/23/14.
 */

def labCounters=[labTest:0, date:0, numberOfCCDWithLabs:0, nullLabs:0]

def arrayOfFiles = files

def parallelCollection = GParsPool.withPool {

    arrayOfFiles.eachParallel { File file ->

        def xml = new XmlSlurper().parse(file.newInputStream())
        def sections = xml.component.structuredBody.component.section

        sections.each { section ->
            def sectionName = section.code.@code.text()

            synchronized (labCounters) {
                if (sectionName == "30954-2") {

                    boolean firstTimeIn = false;

                    def entries = section.entry;
                    if (entries.size() != 0) {
                        entries.each { entry ->
                            def observation = entries.organizer.component.observation
                            def labTest = observation.code.@displayName.text();

                            if (labTest) {
                                if (firstTimeIn == false) {
                                    labCounters['numberOfCCDWithLabs']++;
                                    firstTimeIn = true;
                                }

                                //Lab Test
                                if (labTest) {
                                    labCounters['labTest']++
                                }

                                //Lab Date
                                def labDate = observation.effectiveTime.@value.text();
                                if (labDate) {
                                    labCounters['date']++
                                }
                            } else {
                                labCounters['nullLabs']++;
                            }
                        }
                    }
                }
            }
        }
    }
}

println "Number of CCDS with Lab Results: " + labCounters.get('numberOfCCDWithLabs')
println 'Average number of Lab Results that contain one test in the CCDS: ' + (labCounters.get('numberOfCCDWithLabs')/arrayOfFiles.size()) *100 + '%';
println 'Number of Labs Tests not Null: ' + labCounters.get('labTest')
println "Lab Date:" + labCounters.get('date')
println 'Number of Null Labs: ' + labCounters.get('nullLabs')
println "Lab Result Source: Not in CCD - generated by the HealthLogix instance and stored in the C-CDA"
